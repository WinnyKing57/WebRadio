name: Android CI Build

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk # Corrected GITHUB_PATH to github.workspace
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk # Corrected GITHUB_PATH to github.workspace

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17 # MODIFIED HERE
      uses: actions/setup-java@v4
      with:
        java-version: '17' # MODIFIED HERE
        distribution: 'temurin'

    - name: Download and install Android SDK Command Line Tools
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d .
        mv cmdline-tools latest

        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --update
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME           "platforms;android-34"           "build-tools;34.0.0"           "platform-tools"

    - name: Ensure no local.properties is present
      run: find . -name local.properties -print -delete

    - name: Grant execute permission to gradlew
      run: chmod +x ./gradlew

    - name: Setup Gradle (without cache)
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-disabled: true

    - name: Check Gradle setup
      run: ./gradlew help

    - name: Network Connectivity Diagnostics
      run: |
        echo "--- Connectivity Checks ---"
        curl -I --fail-with-body --connect-timeout 10 https://plugins.gradle.org/m2/
        curl -I --fail-with-body --connect-timeout 10 https://repo.maven.apache.org/maven2/
        curl -I --fail-with-body --connect-timeout 10 https://dl.google.com/dl/android/maven2/com/android/tools/build/gradle/8.2.2/gradle-8.2.2.pom
        curl -I --fail-with-body --connect-timeout 10 https://plugins.gradle.org/m2/org/jetbrains/kotlin/kotlin-gradle-plugin/1.9.20/kotlin-gradle-plugin-1.9.20.pom
        curl -I --fail-with-body --connect-timeout 10 https://dl.google.com/dl/android/maven2/androidx/navigation/navigation-safe-args-gradle-plugin/2.7.7/navigation-safe-args-gradle-plugin-2.7.7.pom
        echo "--- Diagnostics complete ---"
      continue-on-error: true

    - name: Build APK (debug)
      run: ./gradlew clean :WebradioApp:app:assembleDebug --stacktrace --info --no-daemon --refresh-dependencies > build_output.log 2>&1

    - name: Upload build log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log.txt
        path: build_output.log
        retention-days: 7

    - name: Capture Kotlin compile logs if build fails
      if: failure()
      run: |
        echo "::group::Kotlin Compiler Logs"
        find . -type f -name "*.log" -exec cat {} \; # Corrected find -exec
        echo "::endgroup::"

    # Uncomment to enable unit tests
    # - name: Run Unit Tests
    #   run: ./gradlew :WebradioApp:app:testDebugUnitTest --no-daemon --info

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: WebradioApp/app/build/outputs/apk/debug/app-debug.apk
